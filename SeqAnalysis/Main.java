 import java.io.*;
  import java.util.*;
 import javax.swing.*;
public class Main extends javax.swing.JFrame {

    static String fnamex="";
    static String fnamexte="";
	static String ID="";
	static String ID1="";
	static String name="";
    static String name1="";
    static String namete="";
    static String name1te="";

     static String inn="";
     static String inra="";
     static Vector vzz=new Vector();

     MysqlConnect dd;
    public Main() {
		super("Protein Sequence Analysis");
        initComponents();
        dd=new MysqlConnect();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ta = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 255, 204));

        ta.setBackground(new java.awt.Color(102, 255, 255));
        ta.setColumns(20);
        ta.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        ta.setRows(5);
        jScrollPane1.setViewportView(ta);

        jButton1.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        jButton1.setText("load protein");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        jButton2.setText("Predict Pattern");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        jButton3.setText("Load Pattern");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        jButton4.setText("input Raw sequence");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        jButton5.setText("predict");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        jButton6.setText("pattern Result");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        jButton7.setText("Similarity");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
		        jPanel1.setLayout(jPanel1Layout);
		        jPanel1Layout.setHorizontalGroup(
		            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
		            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
		                .addContainerGap()
		                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
		                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 171, Short.MAX_VALUE)
		                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
		                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
		                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
		                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
		                    .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
		                    .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
		                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
		                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 465, javax.swing.GroupLayout.PREFERRED_SIZE)
		                .addGap(30, 30, 30))
		        );
		        jPanel1Layout.setVerticalGroup(
		            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
		            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
		                .addContainerGap(26, Short.MAX_VALUE)
		                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 496, javax.swing.GroupLayout.PREFERRED_SIZE)
		                .addGap(20, 20, 20))
		            .addGroup(jPanel1Layout.createSequentialGroup()
		                .addGap(41, 41, 41)
		                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
		                .addGap(26, 26, 26)
		                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
		                .addGap(26, 26, 26)
		                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
		                .addGap(18, 18, 18)
		                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
		                .addGap(18, 18, 18)
		                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
		                .addGap(28, 28, 28)
		                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
		                .addGap(34, 34, 34)
		                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
		                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
		        );

		        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		        getContentPane().setLayout(layout);
		        layout.setHorizontalGroup(
		            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
		            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
		        );
		        layout.setVerticalGroup(
		            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
		            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        try
		{
			String aa[]={};
			Main.ta.append("\tInput File And Sequence :\n\n");
			JFileChooser chooser = new JFileChooser("Input");
			chooser.setMultiSelectionEnabled(true);
			//System.out.println(chooser);
			int returnVal = chooser.showOpenDialog(null);
			java.io.File f = chooser.getSelectedFile().getAbsoluteFile();
			//System.err.println(f.getName());
			fnamex=f.getName();
			name="Input\\"+fnamex;
			System.out.println(""+f);
			Main.ta.append("\t"+fnamex+" file is loaded\n");
			Main.ta.append("\n\tFile Content is : \n");
			BufferedWriter out = new BufferedWriter(new FileWriter("out.txt"));
			BufferedReader in = new BufferedReader(new FileReader("Input\\"+fnamex));
			String s="",s1="";
			Vector vz=new Vector();
			while((s=in.readLine())!=null)
			{
				if(vz.contains(s))
				{
					Main.ta.append("\n"+s);
				}
				else
				{
					Main.ta.append("\n"+s);
					out.write(s+"\n");
				}
				vz.add(s);
			}
			out.close();
			Main.ta.append("\n-------------------------\n");
			JFrame frame=new JFrame();


			if (JOptionPane.showConfirmDialog(null, "Are you sure Want delete table?", "WARNING",
			        JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
			                dd.stat3.executeUpdate("delete from c_table");
			   				dd.stat4.executeUpdate("delete from e_table");
			   				dd.stat5.executeUpdate("delete from h_table");
			                dd.stat6.executeUpdate("delete from t_table");
			                BufferedWriter bwr = new BufferedWriter(new FileWriter("Main_pattern.txt"));
			                bwr.write("");bwr.close();
			                JOptionPane.showMessageDialog(frame,
							"Table Values are Deleted",
							 "",
    						JOptionPane.ERROR_MESSAGE);
			} else {
				JOptionPane.showMessageDialog(frame,
                 "There is no table is deleted");

                   }


		}
		catch(Exception e)
		{
		}
    }


    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {
		try
		{
			//ta.setText("");
			//String aa[]={};
			//ClusE.main(aa);

				ta.setText("");
				String cc="";String ee="";String tt="";String hh="";
				Vector chh=new Vector();
				BufferedReader in1 = new BufferedReader(new FileReader("Main_pattern.txt"));
				String s1="";
				while((s1=in1.readLine())!=null)
				{
					chh.add(s1);
				}
				in1.close();
				Thread.sleep(100);
				BufferedWriter bwk=new BufferedWriter(new FileWriter("Main_pattern.txt",true));
				Main.ta.append("\n\tPattern Result :\n");
				String aa[]={};
				Predict.main(aa);
				BufferedReader in = new BufferedReader(new FileReader("pattern.txt"));
				String s="";
				while((s=in.readLine())!=null)
				{
					if(chh.contains(s))
					{
						//Main.ta.append("\n"+s);
						String mai[]=s.split("=");
						String name=mai[0];
						String value=mai[1];
						if(name.equals("c"))
						{
							cc+=s+"\n";
						}
						if(name.equals("e"))
						{
							ee+=s+"\n";
						}
						if(name.equals("t"))
						{
							tt+=s+"\n";
						}
						if(name.equals("h"))
						{
							hh+=s+"\n";
						}
						System.out.println("come no");

					}
					else
					{
						bwk.write(s+"\n");
						String mai[]=s.split("=");
						String name=mai[0];
						String value=mai[1];
						System.out.println("come ay");
						if(name.equals("c"))
						{
							cc+=s+"\n";
						}
						if(name.equals("e"))
						{
							ee+=s+"\n";
						}
						if(name.equals("t"))
						{
							tt+=s+"\n";
						}
						if(name.equals("h"))
						{
							hh+=s+"\n";
						}

						//Main.ta.append("\n"+s);
						dd.stat1.executeUpdate("insert into "+name+"_table values('"+value+"')");
					}
					s=s.replace("=","	");
				}
				bwk.close();


				Main.ta.append("\n-----------------------\n\tC pattern\n-----------------------\n");Main.ta.append(""+cc);
				Main.ta.append("\n-----------------------\n\tE pattern\n-----------------------\n");Main.ta.append(""+ee);
				Main.ta.append("\n-----------------------\n\tT pattern\n-----------------------\n");Main.ta.append(""+tt);
				Main.ta.append("\n-----------------------\n\tH pattern\n-----------------------\n");Main.ta.append(""+hh);
				Main.ta.append("\n-------------------------\n");



				/*Main.ta.append("\n\n\tTotal Pattern Result :\n");

				BufferedReader in2 = new BufferedReader(new FileReader("Main_pattern.txt"));
				String s2="";
				while((s2=in2.readLine())!=null)
				{
					s2=s2.replace("=","	");
					Main.ta.append("\n"+s2);
				}
				Main.ta.append("\n-------------------------\n");*/


		}
		catch(Exception e)
		{
			e.printStackTrace();
		}
    }

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {
        try
		{
			String aa[]={};
			Store.main(aa);
			//Similarity.main(aa);
		}
		catch(Exception e)
		{
			e.printStackTrace();
		}

    }

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        try
        {

			ta.setText("");
			Main.ta.append("\tInput File And Sequence :\n\n");
			JFileChooser chooser = new JFileChooser("raw");
			chooser.setMultiSelectionEnabled(true);
			//System.out.println(chooser);
			int returnVal = chooser.showOpenDialog(null);
			java.io.File f = chooser.getSelectedFile().getAbsoluteFile();
			//System.err.println(f.getName());
			fnamexte=f.getName();
			namete="raw\\"+fnamexte;
			System.out.println(""+f);
			Main.ta.append("\t"+fnamexte+" file is loaded\n");
			Main.ta.append("\n\tFile Content is : \n");
			BufferedWriter out = new BufferedWriter(new FileWriter("out1.txt"));
			BufferedReader in = new BufferedReader(new FileReader(namete));
			String s="";
			while((s=in.readLine())!=null)
			{
				if(s.contains(">"))
				{
					Main.ta.append("\n"+s);
					//out.write(""+s+"\n");
				}
				else
				{
					inn+=s;
					inra+=s;
					vzz.add(""+s);
					Main.ta.append("\n"+s);
					out.write(""+s+"\n");
				}
			}
			out.close();
			String aa[]={namete};
			ClusE.main(aa);

		}
		catch(Exception e)
		{
			e.printStackTrace();

		}

    }

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {
		try
        {
			String aa[]={};
			Hybird.main(aa);
			Hybrid_matching.main(aa);
			Percentage.main(aa);
			Main.ta.append("\n\t Hybrid Pattern-Matching Algorithm Result is:  : \n");
			BufferedReader in = new BufferedReader(new FileReader("before.txt"));
			String s="";int mn=0;
			while((s=in.readLine())!=null)
			{
				Main.ta.append("\n"+vzz.get(mn));mn++;
				Main.ta.append("\n"+s);
			}



		}

		catch(Exception e)
		{

		}


    }

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {
		try
		{
			String aa[]={};
			PieChart_AWT.main(aa);

		}
		catch(Exception e)
		{

		}
    }

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {
		try
		{
			String aa[]={"insim.txt","sim.txt"};
			StringSimilarity.main(aa);

			Main.ta.append("\n\n\t The Similarity Result is : \n");
			BufferedReader in = new BufferedReader(new FileReader("sim.txt"));
			String s="";
			while((s=in.readLine())!=null)
			{
				s=s.replace("=","   ");
				Main.ta.append("\n"+s);
			}




		}
		catch(Exception e)
		{

		}

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTextArea ta;
    // End of variables declaration
}
